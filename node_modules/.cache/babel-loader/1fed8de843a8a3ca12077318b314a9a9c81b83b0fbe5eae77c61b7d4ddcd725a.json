{"ast":null,"code":"var _jsxFileName = \"/Users/saptrishijaiswal/Desktop/Dynamic form/dynamic-form/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Helper function to generate auto-numbering\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst generateNumber = (prefix, index) => `${prefix}${index + 1}`;\nconst QuestionItem = ({\n  question,\n  onDelete,\n  onAddChild,\n  onUpdate,\n  numbering\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: `${question.depth * 20}px`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: numbering\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: question.text,\n      onChange: e => onUpdate(question.id, 'text', e.target.value),\n      placeholder: \"Enter question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: question.type,\n      onChange: e => onUpdate(question.id, 'type', e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Short Answer\",\n        children: \"Short Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"True/False\",\n        children: \"True/False\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), question.type === 'True/False' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: question.answer,\n        onChange: e => onUpdate(question.id, 'answer', e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"True\",\n          children: \"True\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"False\",\n          children: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), question.answer === 'True' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onAddChild(question.id),\n        children: \"Add Child Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDelete(question.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = QuestionItem;\nconst DynamicForm = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n\n  // Generate unique IDs for questions\n  const generateId = () => '_' + Math.random().toString(36).substr(2, 9);\n\n  // Add new parent question\n  const addQuestion = () => {\n    const newQuestion = {\n      id: generateId(),\n      text: '',\n      type: 'Short Answer',\n      answer: '',\n      depth: 0,\n      children: []\n    };\n    setQuestions([...questions, newQuestion]);\n  };\n\n  // Recursive function to update questions\n  const updateQuestion = (id, field, value, items = questions) => {\n    return items.map(q => {\n      if (q.id === id) {\n        return {\n          ...q,\n          [field]: value\n        };\n      } else if (q.children.length) {\n        return {\n          ...q,\n          children: updateQuestion(id, field, value, q.children)\n        };\n      }\n      return q;\n    });\n  };\n\n  // Add child question\n  const addChildQuestion = id => {\n    const updatedQuestions = questions.map(q => {\n      if (q.id === id) {\n        const newChild = {\n          id: generateId(),\n          text: '',\n          type: 'Short Answer',\n          answer: '',\n          depth: q.depth + 1,\n          children: []\n        };\n        return {\n          ...q,\n          children: [...q.children, newChild]\n        };\n      }\n      return q;\n    });\n    setQuestions(updatedQuestions);\n  };\n\n  // Delete question and its children recursively\n  const deleteQuestion = (id, items = questions) => {\n    return items.filter(q => {\n      if (q.id === id) return false;\n      if (q.children.length) {\n        q.children = deleteQuestion(id, q.children);\n      }\n      return true;\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('Form Submitted:', questions);\n  };\n\n  // Recursive function to display the hierarchical view\n  const renderQuestions = (items, numbering = '') => {\n    return items.map((q, index) => {\n      const currentNumbering = generateNumber(numbering ? numbering + '.' : 'Q', index);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(QuestionItem, {\n          question: q,\n          onDelete: id => setQuestions(deleteQuestion(id)),\n          onAddChild: id => addChildQuestion(id),\n          onUpdate: (id, field, value) => setQuestions(updateQuestion(id, field, value)),\n          numbering: currentNumbering\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), q.children.length > 0 && renderQuestions(q.children, currentNumbering)]\n      }, q.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dynamic Question Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addQuestion,\n      children: \"Add New Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [renderQuestions(questions), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(DynamicForm, \"bGJpJfCjAm0mXGpMC+11bDyoUr4=\");\n_c2 = DynamicForm;\nexport default DynamicForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"QuestionItem\");\n$RefreshReg$(_c2, \"DynamicForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","generateNumber","prefix","index","QuestionItem","question","onDelete","onAddChild","onUpdate","numbering","style","marginLeft","depth","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","text","onChange","e","id","target","placeholder","answer","onClick","_c","DynamicForm","_s","questions","setQuestions","generateId","Math","random","toString","substr","addQuestion","newQuestion","updateQuestion","field","items","map","q","length","addChildQuestion","updatedQuestions","newChild","deleteQuestion","filter","handleSubmit","preventDefault","console","log","renderQuestions","currentNumbering","onSubmit","_c2","$RefreshReg$"],"sources":["/Users/saptrishijaiswal/Desktop/Dynamic form/dynamic-form/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\n// Helper function to generate auto-numbering\nconst generateNumber = (prefix, index) => `${prefix}${index + 1}`;\n\nconst QuestionItem = ({ question, onDelete, onAddChild, onUpdate, numbering }) => {\n  return (\n    <div style={{ marginLeft: `${question.depth * 20}px` }}>\n      <h4>{numbering}</h4>\n      <input\n        type=\"text\"\n        value={question.text}\n        onChange={(e) => onUpdate(question.id, 'text', e.target.value)}\n        placeholder=\"Enter question\"\n      />\n      <select\n        value={question.type}\n        onChange={(e) => onUpdate(question.id, 'type', e.target.value)}\n      >\n        <option value=\"Short Answer\">Short Answer</option>\n        <option value=\"True/False\">True/False</option>\n      </select>\n\n      {question.type === 'True/False' && (\n        <>\n          <select\n            value={question.answer}\n            onChange={(e) => onUpdate(question.id, 'answer', e.target.value)}\n          >\n            <option value=\"True\">True</option>\n            <option value=\"False\">False</option>\n          </select>\n          {question.answer === 'True' && (\n            <button onClick={() => onAddChild(question.id)}>Add Child Question</button>\n          )}\n        </>\n      )}\n\n      <button onClick={() => onDelete(question.id)}>Delete</button>\n    </div>\n  );\n};\n\nconst DynamicForm = () => {\n  const [questions, setQuestions] = useState([]);\n\n  // Generate unique IDs for questions\n  const generateId = () => '_' + Math.random().toString(36).substr(2, 9);\n\n  // Add new parent question\n  const addQuestion = () => {\n    const newQuestion = {\n      id: generateId(),\n      text: '',\n      type: 'Short Answer',\n      answer: '',\n      depth: 0,\n      children: [],\n    };\n    setQuestions([...questions, newQuestion]);\n  };\n\n  // Recursive function to update questions\n  const updateQuestion = (id, field, value, items = questions) => {\n    return items.map((q) => {\n      if (q.id === id) {\n        return { ...q, [field]: value };\n      } else if (q.children.length) {\n        return { ...q, children: updateQuestion(id, field, value, q.children) };\n      }\n      return q;\n    });\n  };\n\n  // Add child question\n  const addChildQuestion = (id) => {\n    const updatedQuestions = questions.map((q) => {\n      if (q.id === id) {\n        const newChild = {\n          id: generateId(),\n          text: '',\n          type: 'Short Answer',\n          answer: '',\n          depth: q.depth + 1,\n          children: [],\n        };\n        return { ...q, children: [...q.children, newChild] };\n      }\n      return q;\n    });\n    setQuestions(updatedQuestions);\n  };\n\n  // Delete question and its children recursively\n  const deleteQuestion = (id, items = questions) => {\n    return items.filter((q) => {\n      if (q.id === id) return false;\n      if (q.children.length) {\n        q.children = deleteQuestion(id, q.children);\n      }\n      return true;\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('Form Submitted:', questions);\n  };\n\n  // Recursive function to display the hierarchical view\n  const renderQuestions = (items, numbering = '') => {\n    return items.map((q, index) => {\n      const currentNumbering = generateNumber(numbering ? numbering + '.' : 'Q', index);\n      return (\n        <div key={q.id}>\n          <QuestionItem\n            question={q}\n            onDelete={(id) => setQuestions(deleteQuestion(id))}\n            onAddChild={(id) => addChildQuestion(id)}\n            onUpdate={(id, field, value) => setQuestions(updateQuestion(id, field, value))}\n            numbering={currentNumbering}\n          />\n          {q.children.length > 0 && renderQuestions(q.children, currentNumbering)}\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div>\n      <h1>Dynamic Question Form</h1>\n      <button onClick={addQuestion}>Add New Question</button>\n      <form onSubmit={handleSubmit}>\n        {renderQuestions(questions)}\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default DynamicForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}